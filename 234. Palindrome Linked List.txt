234. Palindrome Linked List

C++语言:

class Solution {
public:
    bool isPalindrome(ListNode* head) {
        ListNode *slow,*fast,*pre,*tmp;
        slow=fast=head;
        pre=NULL;
        while(fast && fast->next)
        {
            fast=fast->next->next;
            //反转前一部分单链表
            tmp=slow;
            slow=slow->next;
            tmp->next=pre;
            pre=tmp;
        }
        if(fast!=NULL)
        {
            slow=slow->next;
        }
        while(pre && slow)
        {
            if(pre->val != slow->val)
                return false;
            pre=pre->next;
            slow=slow->next;
        }
        return true;
    }
};

Python语言:

class Solution(object):
    def isPalindrome(self, head):
        """
        :type head: ListNode
        :rtype: bool
        """
        slow=fast=head
        pre=None
        while fast and fast.next:
            fast=fast.next.next
            pre,slow,pre.next = slow,slow.next,pre
        if fast is not None:
            slow=slow.next
        while slow and pre:
            if slow.val != pre.val:
                return False
            slow=slow.next
            pre=pre.next
        return True