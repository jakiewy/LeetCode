155. Min Stack

C++语言：

class MinStack {
public:
    /** initialize your data structure here. */
    stack<int> s;
    stack<int> min;
    
    MinStack() {

    }
    
    void push(int x) {
        s.push(x);
        if(min.empty() || x<=min.top())
            min.push(x);
    }
    
    void pop() {
        if(min.top()==s.top())
            min.pop();
        s.pop();
    }
    
    int top() {
        return s.top();
    }
    
    int getMin() {
        return min.top();
    }
};

Python语言：

class MinStack(object):

    def __init__(self):
        """
        initialize your data structure here.
        """
        self.stack=[]
        self.min=[]

    def push(self, x):
        """
        :type x: int
        :rtype: void
        """
        self.stack.append(x)
        if len(self.min)==0 or x<=self.min[len(self.min)-1]: 
            self.min.append(x)


    def pop(self):
        """
        :rtype: void
        """
        top = self.stack.pop()
        if self.min[len(self.min)-1] == top:
            self.min.pop()
        

    def top(self):
        """
        :rtype: int
        """
        return self.stack[len(self.stack)-1]

    def getMin(self):
        """
        :rtype: int
        """
        return self.min[len(self.min)-1]
