21. Merge Two Sorted Lists

C++语言：

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */

 方法一：
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode *p1=l1,*p2=l2;
        ListNode *res=NULL;
        ListNode *head=new ListNode(0);
        if(l1==NULL && l2==NULL)
            return res;
        if(l1==NULL)  return l2;
        if(l2==NULL)  return l1;
        
        res=head;
        while(l1!=NULL || l2!=NULL)
        {
            if(l1!=NULL && l2!=NULL)
            {
                if(l1->val<=l2->val)
                {
                    res->next=l1;
                    res=res->next;
                    l1=l1->next;
                }
                else
                {
                    res->next=l2;
                    res=res->next;
                    l2=l2->next;
                }
            }
            else if(l1!=NULL)
            {
                    res->next=l1;
                    res=res->next;
                    l1=l1->next;
            }
            else
            {
                    res->next=l2;
                    res=res->next;
                    l2=l2->next;  
            }
        }
        return head->next;       
    }
};

方法二：

class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode *head=new ListNode(0);
        ListNode *res;
        res=head;
        while(l1 && l2)
        {
            if(l1->val<l2->val)
            {   res->next=l1;
                l1=l1->next;
            }
            else
            {   res->next=l2;
                l2=l2->next;
            }
            res=res->next;
        }
        res->next=l1?l1:l2;
        return head->next;
    }
};