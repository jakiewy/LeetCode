206. Reverse Linked List

C++语言：

方法一：
从头至尾梳理指针，将next指向父节点

class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode *prev=NULL,*next=NULL;
        while(head)
        {
            next=head->next;
            head->next=prev;
            prev=head;
            head=next;
        }
        return prev;
    }
};

方法二：
子函数功能为返回链表最后节点并删除

class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode *h=NULL,*p=NULL,*temp=NULL;
        if(head == NULL)
            return NULL;
        if(head->next == NULL)
            return head;
        h=tail(head);
        p=h;
        while(1)
        {
            temp=tail(head);
            p->next=temp;
            p=p->next;
            if(temp == head)
                break;
        }
        return h;
    }
    ListNode* tail(ListNode* head)
    {
        ListNode *p1 = head,*p2 = head;
        while(p1->next != NULL)
        {
            p2=p1;
            p1=p1->next;
        }
        p2->next=NULL;
        return p1;
    }
};