42. Trapping Rain Water

C++语言：
思路：l_max和r_max记录能形成水坑的最大高度，从低的方向向高的方向搜索
class Solution
{
public:
    int trap(vector<int> &height)
    {
        int left = 0, right = height.size() - 1;
        int l_max = 0, r_max = 0;
        int ret = 0;
        while(left < right)
        {
            //从左向右
            if(height[left] <= height[right])
            {
                if(height[left] >= l_max)
                    l_max = height[left];
                else
                    ret += (l_max - height[left]);
                left++;
            }
            //从右向左
            else
            {
                if(height[right] >= r_max)
                    r_max = height[right];
                else
                    ret += (r_max - height[right]);
                right--;
            }
        }
        return ret;
    }
};

Python语言：
class Solution:
    def trap(self, height):
        left,right,l_max,r_max,ret = 0,len(height)-1,0,0,0
        while left<right:
            if height[left]<=height[right]:
                if height[left]>=l_max:
                    l_max=height[left]
                else:
                    ret += (l_max-height[left])
                left+=1
            else:
                if height[right]>=r_max:
                    r_max=height[right]
                else:
                    ret += (r_max-height[right])
                right-=1
        return ret
